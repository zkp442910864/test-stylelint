// 封装属性
@width: 10px;
@height: @width + 10px;
@base: 2cm * 3mm; // result is 6cm
@var: 50vh/2; // result is 25vh
// map属性
#colors() {
    primary: blue;
    secondary: green;
}

// 封装函数
.bordered {
    border-top: dotted 1px black;
    border-bottom: solid 2px black;
}

// each 解析不了。。。
// @selectors: blue, green, red;
// each(@selectors, {
//   .sel-@{value} {
//     a: b;
//   }
// });


#header {
    width: @width;
    height: @height;
    color: #colors[primary];
    .bordered();

    .navigation {
        font-size: 12px;
    }

    // & 指向自身(#header

    /**
    * 等于
    * #header::after{}
    */
    &::after {
        display: block;
        height: 0;
        clear: both;
        content: ' ';
        font-size: 0;
        visibility: hidden;
    }

    /**
    * 等于
    * #header-ok::after{}
    */
    &-ok {
        background-image: url('ok.png');
    }

    /**
    * 等于
    * @media (min-width: 1280px) {
    *    .#header {
    *        width: 800px;
    *    }
    * }
    */
    @media (min-width: 1280px) {
        width: 800px;
    }
}

.color-weak {
    filter: invert(80%);
}

.ant-layout {
    min-height: 100vh;
}

// CSS Modules 语法 :global
// .put-performance {
//     :global {
//         .ant-modal-content {
//             padding-top: 0;
//         }

//         .ant-modal-body {
//             padding-top: 0;
//         }
//     }
// }
